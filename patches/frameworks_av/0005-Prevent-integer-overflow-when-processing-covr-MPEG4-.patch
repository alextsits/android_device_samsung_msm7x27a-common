From e1be03f42555c7d3468c61b05822d892b0085579 Mon Sep 17 00:00:00 2001
From: "Joshua J. Drake" <android-open-source@qoop.org>
Date: Mon, 4 May 2015 18:36:35 -0500
Subject: [PATCH 5/8] Prevent integer overflow when processing covr MPEG4
 atoms

If the 'chunk_data_size' value is SIZE_MAX, an integer overflow will occur
and cause an undersized buffer to be allocated. The following processing
then overfills the resulting memory and creates a potentially exploitable
condition. Ensure that integer overflow does not occur.

Bug: 20923261
(cherry picked from commit b5738ab014d916b071e66857a1546fc6b4813f09)

Conflicts:
	media/libstagefright/MPEG4Extractor.cpp

Change-Id: Id7fbe1f8543cd016cf5b272b7ea4cd1fb01f2b8f
---
 media/libstagefright/MPEG4Extractor.cpp |    4 ++++
 1 file changed, 4 insertions(+)

diff --git a/media/libstagefright/MPEG4Extractor.cpp b/media/libstagefright/MPEG4Extractor.cpp
index dd1e60b..214ad75 100644
--- a/media/libstagefright/MPEG4Extractor.cpp
+++ b/media/libstagefright/MPEG4Extractor.cpp
@@ -1487,6 +1487,10 @@ status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
             if (mFileMetaData != NULL) {
                 ALOGV("chunk_data_size = %lld and data_offset = %lld",
                         chunk_data_size, data_offset);
+
+                if (chunk_data_size >= SIZE_MAX - 1) {
+                    return ERROR_MALFORMED;
+                }
                 uint8_t *buffer = new uint8_t[chunk_data_size + 1];
                 if (mDataSource->readAt(
                     data_offset, buffer, chunk_data_size) != (ssize_t)chunk_data_size) {
-- 
1.7.9.5

